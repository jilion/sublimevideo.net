SublimeVideo.homeReady = ->
  SublimeVideo.setupDemo()
  SublimeVideo.setupQuotesSlideshow()
  # SublimeVideo.pickRandomVideoThumb()
  # (new SublimeVideo.Quotes).randomShow() if $('section.showcase').exists()

SublimeVideo.setupDemo = ->
  unless SublimeVideo.homeDemo?
    SublimeVideo.homeDemo = new SublimeVideo.HomeDemo('#home_demo_player')

  sublime.ready ->
    SublimeVideo.homeDemo.setupObservers()

SublimeVideo.setupQuotesSlideshow = ->
  if $('#customers-quotes-slideshow').exists()
    unless SublimeVideo.quotesSlideshow?
      SublimeVideo.quotesSlideshow = new SublimeVideo.QuotesSlideshow('#customers-quotes-slideshow')
    SublimeVideo.quotesSlideshow.start()

class SublimeVideo.QuotesSlideshow
  constructor: (@slideshowDivSelector, @delay = 11) ->

  start: ->
    @stop()
    $("#{@slideshowDivSelector} > li:gt(0)").hide().addClass('blur')
    @interval = setInterval =>
      @nextQuote()
    , @delay*1000

  stop: ->
    clearInterval @interval

  nextQuote: ->
    $el = $("#{@slideshowDivSelector} > li:first")
    $el.addClass('blur').fadeOut 800, =>
      $el.next().fadeIn(800).removeClass('blur')
      $el.appendTo(@slideshowDivSelector)

# SublimeVideo.postersPaths = <%= (1..6).inject([]) { |memo, n| memo << image_path("home/video/posters/poster_#{n}.jpg") } %>

# SublimeVideo.pickRandomVideoThumb = ->
#   if ($homeVideo = $('#home_video')).exists()
#     imgIndex = Math.floor(Math.random()*6)
#
#     thumbs = $homeVideo.find('img.video_thumb')
#     thumbs.hide()
#
#     # Lightbox thumb
#     $(thumbs[imgIndex]).show()
#     $homeVideo.show()
#
#     # Lightbox poster
#     unless SublimeVideo.isMobile()
#       posterImage = new Image()
#       posterImage.src = SublimeVideo.postersPaths[imgIndex]
#     $video = $("#video_framework")
#     $video.attr("poster", SublimeVideo.postersPaths[imgIndex])

class SublimeVideo.HomeDemo
  constructor: (playerId) ->
    @playerId = playerId

  reload: ->
    @$player = $(@playerId)
    @featuresButtons = $('ul.demo-video-actions')
    @kitsButtons = $('ul.demo-choose-design')

  setupObservers: ->
    @reload()

    @kitsButtons.find('li a').each (index, element) =>
      @manageTogglerBtn($(element), 'kit')

    @featuresButtons.find('li a').each (index, element) =>
      $element = $(element)
      if $element.data('feature') is 'lightbox'
        @setupLightbox($element)
      else
        @manageTogglerBtn($element, 'feature')

  manageTogglerBtn: ($element, attribute) ->
    autoplay = true
    $element.on 'click', (event) =>
      event.preventDefault()
      if attribute is "kit"
        @kitsButtons.find('li').removeClass('active')
        autoplay = false
      @setupAttribute($element.data(attribute), autoplay)
      $element.parent().toggleClass('active')

  setupAttribute: (value, autoplay) ->
    @unprepareVideo()
    @updatePlayersValues(@$player, value)
    @updatePlayersValues(@lightboxPlayer, value)
    @prepareAndPlayVideo(autoplay)

  updatePlayersValues: (player, value) ->
    switch value
      when 9, 10, 11
        player.attr('data-player-kit', value)
      when 'dm-cloud'
        sources = player.find('source')
        newSources = []

        if /sublimevideo/.test(sources[0].src)
          player.attr('poster', '<%= asset_url("dmcloud.jpg") %>')
          newSources.push $("<source src='https://cdn.dmcloud.net/route/http/4bab4364f325e14f14000000/4cbdac0e94a6f61144000186/abs_s02.mp4' />")
          newSources.push $("<source src='http://cdn.dmcloud.net/route/http/4bab4364f325e14f14000000/4cbdac0e94a6f61144000186/abs_s04.mp4' data-quality='hd' />")
        else
          player.attr('poster', '<%= asset_url("demo/midnight_sun2_800.jpg") %>')
          newSources.push $("<source src='http://media.sublimevideo.net/v/midnight-sun-short-edit-360p.mp4' />")
          newSources.push $("<source src='http://media.sublimevideo.net/v/midnight-sun-short-edit-720p.mp4' data-quality='hd' />")
          newSources.push $("<source src='http://media.sublimevideo.net/v/midnight-sun-short-edit-360p.webm' />")
          newSources.push $("<source src='http://media.sublimevideo.net/v/midnight-sun-short-edit-720p.webm' data-quality='hd' />")

        sources.remove()
        newSources.forEach (element) -> element.appendTo(player)
      else
        attribute_data = "data-#{value}-enable"
        if player.attr(attribute_data) is 'true'
          player.attr(attribute_data, 'false')
        else
          player.attr(attribute_data, 'true')

  unprepareVideo: ->
    sublime.unprepare @$player[0]

  prepareAndPlayVideo: (autoplay) ->
    # Don't autoplay if it change the design
    if autoplay
      @$player.attr('data-autoplay', 'true')
    else
      @$player.removeAttr('data-autoplay')
    sublime.prepare @$player[0]

  setupLightbox: ($element) ->
    $element.attr('href', '#lightbox_home_demo')

    @lightboxPlayer = @$player.clone().removeAttr('style class src')
      .attr(id: 'lightbox_home_demo', width: 800, height: 450)
      .hide()
      .appendTo('section.demo-video-player')

    sublime.prepare $element[0], (lightbox) ->
      lightbox.on 'didClose', ->
        $element.parent().removeClass('active')

    $element.on 'click', (event) ->
      $element.parent().addClass('active')

